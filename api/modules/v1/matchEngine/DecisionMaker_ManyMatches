<?php

namespace api\modules\v1\matchEngine;

/**
 * DecisionMaker_ManyMatches - DecisionMaker when there are is a limit for matches
 *
 * This class provides the functions implementation for decision maker with a fixed limit of matches (1 to N)
 */
class DecisionMaker_AllMatches implements DecisionMaker
{

    /**
     * Defines how many matches a item can accept
     *
     * By default up to 3 matches can be made for each item
     *
     */
    private $maximumMatchesAccepted = 3;
    
    /**
     * Keeps the number of matches that have been accepted previously
     */
    private $currentMatchesAccepted = 0;

    /**
     * Keeps the status of the item.
     *
     * Options: TRUE and FALSE.
     */
    private $isOpen = TRUE;

    /**
     * @return int
     */
    public function getmaximumMatchesAccepted ()
    {
        return $this->maximumMatchesAccepted;
    }

    /**
     * @param int $matchNumber
     */
    public function setmaximumMatchesAccepted ($maxAccept)
    {
        $this->maximumMatchesAccepted = $maxAccept;
    }

    /**
     * DecisionMaker_AllMatches constructor.
     *
     * @param $maxAccept_
     */
    public function __construct ($maxAccept_)
    {
        // Check if parameter was informed
        if (!is_null($maxAccept_)) {
            // Set how many matches the operation'll return
            $this->setmaximumMatchesAccepted($maxAcceptr_);
        }
    }
    
    /**
     * Accepts a match
     *
     * With the status set to ACCEPTED, an item will no longer appear as a possible match for the item that accepted it.
     * Can only accept accept a fixed number of matches.
     *
     * @param $item
     */
    public function acceptMatch($item){
        if(isOpen)
        {
            //setFlag($item) = ACCEPTED;
            $currentMatchesAccepted++;
            if ($currentMatchesAccepted == getmaximumMatchesAccepted())
                close();
        }
        else 
             //YOU_CANNOT_ACCEPT_MORE_MATCHES_ERROR;
    }

    /**
     * Rejects a match
     *
     * With the status set to REJECTED, an item will no longer appear as a possible match for the item that rejected it
     *
     * @param $item
     */
    public function rejectMatch($item){
        //setFlag($item) = REJECTED;
    }
    
    /**
     * Closes the item for future matches
     *
     * With the isOpen attribute set to FALSE, an item will no longer appear as a possible match for others
     */
    public function close(){
        isOpen = FALSE;
    }